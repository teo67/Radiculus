dig Operator plant import "Operator"
dig operators plant import "operators"
harvest class after Operator {
    constructor plant tool(input, functionName) {
        this.input plant input
        this.functionName plant functionName
    }
    dig differentiateFunction plant tool {
        throw "Unable to differentiate an undefined function!"
    }
    dig differentiate plant tool(variable) {
        harvest new operators.Product([this.differentiateFunction(this.input), this.input.differentiate(variable)]) # chain rule!!! #
    }
    dig equal plant tool(other) {
        harvest (type this) = (type other) and this.input.equal(other.input)
    }
    dig print plant tool "'this.functionName'('this.input.print()')"
}